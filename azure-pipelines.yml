# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool: 
  name: 'Default' 

stages:
- stage: Build
  jobs: 
    - job: Build
      displayName: Build $(applicationName)
      steps:
        - script: echo Build $(applicationName)
        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'
            goals: 'package'
        - task: CopyFiles@2
          displayName: 'Copy Files to artifact staging directory'
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)'
            Contents: '**/target/*.?(war|jar)'
            TargetFolder: $(Build.ArtifactStagingDirectory)
        - upload: $(Build.ArtifactStagingDirectory)
          artifact: drop

- stage: Deploy
  displayName: Deploy application
  dependsOn: Build
  jobs:
    - deployment: VMDeploy
      environment:
        name: VM
        resourceType: VirtualMachine
        tags: CICDdeploy
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop   
            - task: AzureWebApp@1
              inputs:
                azureSubscription: 'Resource Manager - Online Cinema'
                appType: 'webAppLinux'
                appName: 'onlineCinema'
                package: '$(System.DefaultWorkingDirectory)/**/*.war'
                runtimeStack: 'TOMCAT|9.0-java11'



